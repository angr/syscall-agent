/*
 * syscalls.h - Linux syscall interfaces (non-arch-specific)
 * Copyright (c) 2004 Randy Dunlap
 * Copyright (c) 2004 Open Source Development Labs
 * 
 * This file is released under the GPLv2.
 * See the file COPYING for more details.
 */

struct epoll_event;
struct iattr;
struct inode;
struct iocb;
struct io_event;
struct iovec;
struct itimerspec;
struct itimerval;
struct kexec_segment;
struct linux_dirent;
struct linux_dirent64;
struct list_head;
struct mmap_arg_struct;
struct msgbuf;
struct user_msghdr;
struct mmsghdr;
struct msqid_ds;
struct new_utsname;
struct nfsctl_arg;
struct __old_kernel_stat;
struct oldold_utsname;
struct old_utsname;
struct pollfd;
struct rlimit;
struct rlimit64;
struct rusage;
struct sched_param;
struct sched_attr;
struct sel_arg_struct;
struct semaphore;
struct sembuf;
struct shmid_ds;
struct sockaddr;
struct stat;
struct stat64;
struct statfs;
struct statfs64;
struct statx;
struct __sysctl_args;
struct sysinfo;
struct timespec;
struct timeval;
struct timex;
struct timezone;
struct tms;
struct utimbuf;
struct mq_attr;
struct compat_stat;
struct compat_timeval;
struct robust_list_head;
struct getcpu_cache;
struct old_linux_dirent;
struct perf_event_attr;
struct file_handle;
struct sigaltstack;
union bpf_attr;

long sys32_quotactl(unsigned int cmd, const char *special, qid_t id, void *addr);
long sys_time(time_t *tloc);
long sys_stime(time_t *tptr);
long sys_gettimeofday(struct timeval *tv, struct timezone *tz);
long sys_settimeofday(struct timeval *tv, struct timezone *tz);
long sys_adjtimex(struct timex *txc_p);
long sys_times(struct tms *tbuf);
long sys_gettid(void);
long sys_nanosleep(struct timespec *rqtp, struct timespec *rmtp);
long sys_alarm(unsigned int seconds);
long sys_getpid(void);
long sys_getppid(void);
long sys_getuid(void);
long sys_geteuid(void);
long sys_getgid(void);
long sys_getegid(void);
long sys_getresuid(uid_t *ruid, uid_t *euid, uid_t *suid);
long sys_getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid);
long sys_getpgid(pid_t pid);
long sys_getpgrp(void);
long sys_getsid(pid_t pid);
long sys_getgroups(int gidsetsize, gid_t *grouplist);
long sys_setregid(gid_t rgid, gid_t egid);
long sys_setgid(gid_t gid);
long sys_setreuid(uid_t ruid, uid_t euid);
long sys_setuid(uid_t uid);
long sys_setresuid(uid_t ruid, uid_t euid, uid_t suid);
long sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid);
long sys_setfsuid(uid_t uid);
long sys_setfsgid(gid_t gid);
long sys_setpgid(pid_t pid, pid_t pgid);
long sys_setsid(void);
long sys_setgroups(int gidsetsize, gid_t *grouplist);
long sys_acct(const char *name);
long sys_capget(cap_user_header_t header, cap_user_data_t dataptr);
long sys_capset(cap_user_header_t header, const cap_user_data_t data);
long sys_personality(unsigned int personality);
long sys_sigpending(old_sigset_t *set);
long sys_sigprocmask(int how, old_sigset_t *set, old_sigset_t *oset);
long sys_sigaltstack(const struct sigaltstack *uss, struct sigaltstack *uoss);
long sys_getitimer(int which, struct itimerval *value);
long sys_setitimer(int which, struct itimerval *value, struct itimerval *ovalue);
long sys_timer_create(clockid_t which_clock, struct sigevent *timer_event_spec, timer_t * created_timer_id);
long sys_timer_gettime(timer_t timer_id, struct itimerspec *setting);
long sys_timer_getoverrun(timer_t timer_id);
long sys_timer_settime(timer_t timer_id, int flags, const struct itimerspec *new_setting, struct itimerspec *old_setting);
long sys_timer_delete(timer_t timer_id);
long sys_clock_settime(clockid_t which_clock, const struct timespec *tp);
long sys_clock_gettime(clockid_t which_clock, struct timespec *tp);
long sys_clock_adjtime(clockid_t which_clock, struct timex *tx);
long sys_clock_getres(clockid_t which_clock, struct timespec *tp);
long sys_clock_nanosleep(clockid_t which_clock, int flags, const struct timespec *rqtp, struct timespec *rmtp);
long sys_nice(int increment);
long sys_sched_setscheduler(pid_t pid, int policy, struct sched_param *param);
long sys_sched_setparam(pid_t pid, struct sched_param *param);
long sys_sched_setattr(pid_t pid, struct sched_attr *attr, unsigned int flags);
long sys_sched_getscheduler(pid_t pid);
long sys_sched_getparam(pid_t pid, struct sched_param *param);
long sys_sched_getattr(pid_t pid, struct sched_attr *attr, unsigned int size, unsigned int flags);
long sys_sched_setaffinity(pid_t pid, unsigned int len, unsigned long *user_mask_ptr);
long sys_sched_getaffinity(pid_t pid, unsigned int len, unsigned long *user_mask_ptr);
long sys_sched_yield(void);
long sys_sched_get_priority_max(int policy);
long sys_sched_get_priority_min(int policy);
long sys_sched_rr_get_interval(pid_t pid, struct timespec *interval);
long sys_setpriority(int which, int who, int niceval);
long sys_getpriority(int which, int who);
long sys_shutdown(int, int);
long sys_reboot(int magic1, int magic2, unsigned int cmd, void *arg);
long sys_restart_syscall(void);
long sys_kexec_load(unsigned long entry, unsigned long nr_segments, struct kexec_segment *segments, unsigned long flags);
long sys_kexec_file_load(int kernel_fd, int initrd_fd, unsigned long cmdline_len, const char *cmdline_ptr, unsigned long flags);
long sys_exit(int error_code);
long sys_exit_group(int error_code);
long sys_wait4(pid_t pid, int *stat_addr, int options, struct rusage *ru);
long sys_waitid(int which, pid_t pid, struct siginfo *infop, int options, struct rusage *ru);
long sys_waitpid(pid_t pid, int *stat_addr, int options);
long sys_set_tid_address(int *tidptr);
long sys_futex(u32 *uaddr, int op, u32 val, struct timespec *utime, u32 *uaddr2, u32 val3);
long sys_init_module(void *umod, unsigned long len, const char *uargs);
long sys_delete_module(const char *name_user, unsigned int flags);
long sys_rt_sigsuspend(sigset_t *unewset, size_t sigsetsize);
long sys_sigaction(int, const struct old_sigaction *, struct old_sigaction *);
long sys_rt_sigaction(int, const struct sigaction *, struct sigaction *, size_t);
long sys_rt_sigprocmask(int how, sigset_t *set, sigset_t *oset, size_t sigsetsize);
long sys_rt_sigpending(sigset_t *set, size_t sigsetsize);
long sys_rt_sigtimedwait(const sigset_t *uthese, siginfo_t *uinfo, const struct timespec *uts, size_t sigsetsize);
long sys_rt_tgsigqueueinfo(pid_t tgid, pid_t pid, int sig, siginfo_t *uinfo);
long sys_kill(pid_t pid, int sig);
long sys_tgkill(pid_t tgid, pid_t pid, int sig);
long sys_tkill(pid_t pid, int sig);
long sys_rt_sigqueueinfo(pid_t pid, int sig, siginfo_t *uinfo);
long sys_sgetmask(void);
long sys_ssetmask(int newmask);
long sys_signal(int sig, __sighandler_t handler);
long sys_pause(void);
long sys_sync(void);
long sys_fsync(unsigned int fd);
long sys_fdatasync(unsigned int fd);
long sys_bdflush(int func, long data);
long sys_mount(char *dev_name, char *dir_name, char *type, unsigned long flags, void *data);
long sys_umount(char *name, int flags);
long sys_oldumount(char *name);
long sys_truncate(const char *path, long length);
long sys_ftruncate(unsigned int fd, unsigned long length);
long sys_stat(const char *filename, struct __old_kernel_stat *statbuf);
long sys_statfs(const char * path, struct statfs *buf);
long sys_statfs64(const char *path, size_t sz, struct statfs64 *buf);
long sys_fstatfs(unsigned int fd, struct statfs *buf);
long sys_fstatfs64(unsigned int fd, size_t sz, struct statfs64 *buf);
long sys_lstat(const char *filename, struct __old_kernel_stat *statbuf);
long sys_fstat(unsigned int fd, struct __old_kernel_stat *statbuf);
long sys_newstat(const char *filename, struct stat *statbuf);
long sys_newlstat(const char *filename, struct stat *statbuf);
long sys_newfstat(unsigned int fd, struct stat *statbuf);
long sys_ustat(unsigned dev, struct ustat *ubuf);
long sys_stat64(const char *filename, struct stat64 *statbuf);
long sys_fstat64(unsigned long fd, struct stat64 *statbuf);
long sys_lstat64(const char *filename, struct stat64 *statbuf);
long sys_fstatat64(int dfd, const char *filename, struct stat64 *statbuf, int flag);
long sys_truncate64(const char *path, loff_t length);
long sys_ftruncate64(unsigned int fd, loff_t length);
long sys_setxattr(const char *path, const char *name, const void *value, size_t size, int flags);
long sys_lsetxattr(const char *path, const char *name, const void *value, size_t size, int flags);
long sys_fsetxattr(int fd, const char *name, const void *value, size_t size, int flags);
long sys_getxattr(const char *path, const char *name, void *value, size_t size);
long sys_lgetxattr(const char *path, const char *name, void *value, size_t size);
long sys_fgetxattr(int fd, const char *name, void *value, size_t size);
long sys_listxattr(const char *path, char *list, size_t size);
long sys_llistxattr(const char *path, char *list, size_t size);
long sys_flistxattr(int fd, char *list, size_t size);
long sys_removexattr(const char *path, const char *name);
long sys_lremovexattr(const char *path, const char *name);
long sys_fremovexattr(int fd, const char *name);
long sys_brk(unsigned long brk);
long sys_mprotect(unsigned long start, size_t len, unsigned long prot);
long sys_mremap(unsigned long addr, unsigned long old_len, unsigned long new_len, unsigned long flags, unsigned long new_addr);
long sys_remap_file_pages(unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long flags);
long sys_msync(unsigned long start, size_t len, int flags);
long sys_fadvise64(int fd, loff_t offset, size_t len, int advice);
long sys_fadvise64_64(int fd, loff_t offset, loff_t len, int advice);
long sys_munmap(unsigned long addr, size_t len);
long sys_mlock(unsigned long start, size_t len);
long sys_munlock(unsigned long start, size_t len);
long sys_mlockall(int flags);
long sys_munlockall(void);
long sys_madvise(unsigned long start, size_t len, int behavior);
long sys_mincore(unsigned long start, size_t len, unsigned char * vec);
long sys_pivot_root(const char *new_root, const char *put_old);
long sys_chroot(const char *filename);
long sys_mknod(const char *filename, umode_t mode, unsigned dev);
long sys_link(const char *oldname, const char *newname);
long sys_symlink(const char *old, const char *new);
long sys_unlink(const char *pathname);
long sys_rename(const char *oldname, const char *newname);
long sys_chmod(const char *filename, umode_t mode);
long sys_fchmod(unsigned int fd, umode_t mode);
long sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg);
long sys_fcntl64(unsigned int fd, unsigned int cmd, unsigned long arg);
long sys_pipe(int *fildes);
long sys_pipe2(int *fildes, int flags);
long sys_dup(unsigned int fildes);
long sys_dup2(unsigned int oldfd, unsigned int newfd);
long sys_dup3(unsigned int oldfd, unsigned int newfd, int flags);
long sys_ioperm(unsigned long from, unsigned long num, int on);
long sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg);
long sys_flock(unsigned int fd, unsigned int cmd);
long sys_io_setup(unsigned nr_reqs, aio_context_t *ctx);
long sys_io_destroy(aio_context_t ctx);
long sys_io_getevents(aio_context_t ctx_id, long min_nr, long nr, struct io_event *events, struct timespec *timeout);
long sys_io_submit(aio_context_t, long, struct iocb * *);
long sys_io_cancel(aio_context_t ctx_id, struct iocb *iocb, struct io_event *result);
long sys_sendfile(int out_fd, int in_fd, off_t *offset, size_t count);
long sys_sendfile64(int out_fd, int in_fd, loff_t *offset, size_t count);
long sys_readlink(const char *path, char *buf, int bufsiz);
long sys_creat(const char *pathname, umode_t mode);
long sys_open(const char *filename, int flags, umode_t mode);
long sys_close(unsigned int fd);
long sys_access(const char *filename, int mode);
long sys_vhangup(void);
long sys_chown(const char *filename, uid_t user, gid_t group);
long sys_lchown(const char *filename, uid_t user, gid_t group);
long sys_fchown(unsigned int fd, uid_t user, gid_t group);
long sys_utime(char *filename, struct utimbuf *times);
long sys_utimes(char *filename, struct timeval *utimes);
long sys_lseek(unsigned int fd, off_t offset, unsigned int whence);
long sys_llseek(unsigned int fd, unsigned long offset_high, unsigned long offset_low, loff_t *result, unsigned int whence);
long sys_read(unsigned int fd, char *buf, size_t count);
long sys_readahead(int fd, loff_t offset, size_t count);
long sys_readv(unsigned long fd, const struct iovec *vec, unsigned long vlen);
long sys_write(unsigned int fd, const char *buf, size_t count);
long sys_writev(unsigned long fd, const struct iovec *vec, unsigned long vlen);
long sys_pread64(unsigned int fd, char *buf, size_t count, loff_t pos);
long sys_pwrite64(unsigned int fd, const char *buf, size_t count, loff_t pos);
long sys_preadv(unsigned long fd, const struct iovec *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h);
long sys_preadv2(unsigned long fd, const struct iovec *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h, int flags);
long sys_pwritev(unsigned long fd, const struct iovec *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h);
long sys_pwritev2(unsigned long fd, const struct iovec *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h, int flags);
long sys_getcwd(char *buf, unsigned long size);
long sys_mkdir(const char *pathname, umode_t mode);
long sys_chdir(const char *filename);
long sys_fchdir(unsigned int fd);
long sys_rmdir(const char *pathname);
long sys_lookup_dcookie(u64 cookie64, char *buf, size_t len);
long sys_quotactl(unsigned int cmd, const char *special, qid_t id, void *addr);
long sys_getdents(unsigned int fd, struct linux_dirent *dirent, unsigned int count);
long sys_getdents64(unsigned int fd, struct linux_dirent64 *dirent, unsigned int count);
long sys_setsockopt(int fd, int level, int optname, char *optval, int optlen);
long sys_getsockopt(int fd, int level, int optname, char *optval, int *optlen);
long sys_bind(int, struct sockaddr *, int);
long sys_connect(int, struct sockaddr *, int);
long sys_accept(int, struct sockaddr *, int *);
long sys_accept4(int, struct sockaddr *, int *, int);
long sys_getsockname(int, struct sockaddr *, int *);
long sys_getpeername(int, struct sockaddr *, int *);
long sys_send(int, void *, size_t, unsigned);
long sys_sendto(int, void *, size_t, unsigned, struct sockaddr *, int);
long sys_sendmsg(int fd, struct user_msghdr *msg, unsigned flags);
long sys_sendmmsg(int fd, struct mmsghdr *msg, unsigned int vlen, unsigned flags);
long sys_recv(int, void *, size_t, unsigned);
long sys_recvfrom(int, void *, size_t, unsigned, struct sockaddr *, int *);
long sys_recvmsg(int fd, struct user_msghdr *msg, unsigned flags);
long sys_recvmmsg(int fd, struct mmsghdr *msg, unsigned int vlen, unsigned flags, struct timespec *timeout);
long sys_socket(int, int, int);
long sys_socketpair(int, int, int, int *);
long sys_socketcall(int call, unsigned long *args);
long sys_listen(int, int);
long sys_poll(struct pollfd *ufds, unsigned int nfds, int timeout);
long sys_select(int n, fd_set *inp, fd_set *outp, fd_set *exp, struct timeval *tvp);
long sys_old_select(struct sel_arg_struct *arg);
long sys_epoll_create(int size);
long sys_epoll_create1(int flags);
long sys_epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);
long sys_epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout);
long sys_epoll_pwait(int epfd, struct epoll_event *events, int maxevents, int timeout, const sigset_t *sigmask, size_t sigsetsize);
long sys_gethostname(char *name, int len);
long sys_sethostname(char *name, int len);
long sys_setdomainname(char *name, int len);
long sys_newuname(struct new_utsname *name);
long sys_uname(struct old_utsname *);
long sys_olduname(struct oldold_utsname *);
long sys_getrlimit(unsigned int resource, struct rlimit *rlim);
long sys_setrlimit(unsigned int resource, struct rlimit *rlim);
long sys_prlimit64(pid_t pid, unsigned int resource, const struct rlimit64 *new_rlim, struct rlimit64 *old_rlim);
long sys_getrusage(int who, struct rusage *ru);
long sys_umask(int mask);
long sys_msgget(key_t key, int msgflg);
long sys_msgsnd(int msqid, struct msgbuf *msgp, size_t msgsz, int msgflg);
long sys_msgrcv(int msqid, struct msgbuf *msgp, size_t msgsz, long msgtyp, int msgflg);
long sys_msgctl(int msqid, int cmd, struct msqid_ds *buf);
long sys_semget(key_t key, int nsems, int semflg);
long sys_semop(int semid, struct sembuf *sops, unsigned nsops);
long sys_semctl(int semid, int semnum, int cmd, unsigned long arg);
long sys_semtimedop(int semid, struct sembuf *sops, unsigned nsops, const struct timespec *timeout);
long sys_shmat(int shmid, char *shmaddr, int shmflg);
long sys_shmget(key_t key, size_t size, int flag);
long sys_shmdt(char *shmaddr);
long sys_shmctl(int shmid, int cmd, struct shmid_ds *buf);
long sys_ipc(unsigned int call, int first, unsigned long second, unsigned long third, void *ptr, long fifth);
long sys_mq_open(const char *name, int oflag, umode_t mode, struct mq_attr *attr);
long sys_mq_unlink(const char *name);
long sys_mq_timedsend(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec *abs_timeout);
long sys_mq_timedreceive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned int *msg_prio, const struct timespec *abs_timeout);
long sys_mq_notify(mqd_t mqdes, const struct sigevent *notification);
long sys_mq_getsetattr(mqd_t mqdes, const struct mq_attr *mqstat, struct mq_attr *omqstat);
long sys_pciconfig_iobase(long which, unsigned long bus, unsigned long devfn);
long sys_pciconfig_read(unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void *buf);
long sys_pciconfig_write(unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void *buf);
long sys_prctl(int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5);
long sys_swapon(const char *specialfile, int swap_flags);
long sys_swapoff(const char *specialfile);
long sys_sysctl(struct __sysctl_args *args);
long sys_sysinfo(struct sysinfo *info);
long sys_sysfs(int option, unsigned long arg1, unsigned long arg2);
long sys_syslog(int type, char *buf, int len);
long sys_uselib(const char *library);
long sys_ni_syscall(void);
long sys_ptrace(long request, long pid, unsigned long addr, unsigned long data);
long sys_add_key(const char *_type, const char *_description, const void *_payload, size_t plen, key_serial_t destringid);
long sys_request_key(const char *_type, const char *_description, const char *_callout_info, key_serial_t destringid);
long sys_keyctl(int cmd, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5);
long sys_ioprio_set(int which, int who, int ioprio);
long sys_ioprio_get(int which, int who);
long sys_set_mempolicy(int mode, const unsigned long *nmask, unsigned long maxnode);
long sys_migrate_pages(pid_t pid, unsigned long maxnode, const unsigned long *from, const unsigned long *to);
long sys_move_pages(pid_t pid, unsigned long nr_pages, const void * *pages, const int *nodes, int *status, int flags);
long sys_mbind(unsigned long start, unsigned long len, unsigned long mode, const unsigned long *nmask, unsigned long maxnode, unsigned flags);
long sys_get_mempolicy(int *policy, unsigned long *nmask, unsigned long maxnode, unsigned long addr, unsigned long flags);
long sys_inotify_init(void);
long sys_inotify_init1(int flags);
long sys_inotify_add_watch(int fd, const char *path, u32 mask);
long sys_inotify_rm_watch(int fd, __s32 wd);
long sys_spu_run(int fd, __u32 *unpc, __u32 *ustatus);
long sys_spu_create(const char *name, unsigned int flags, umode_t mode, int fd);
long sys_mknodat(int dfd, const char * filename, umode_t mode, unsigned dev);
long sys_mkdirat(int dfd, const char * pathname, umode_t mode);
long sys_unlinkat(int dfd, const char * pathname, int flag);
long sys_symlinkat(const char * oldname, int newdfd, const char * newname);
long sys_linkat(int olddfd, const char *oldname, int newdfd, const char *newname, int flags);
long sys_renameat(int olddfd, const char * oldname, int newdfd, const char * newname);
long sys_renameat2(int olddfd, const char *oldname, int newdfd, const char *newname, unsigned int flags);
long sys_futimesat(int dfd, const char *filename, struct timeval *utimes);
long sys_faccessat(int dfd, const char *filename, int mode);
long sys_fchmodat(int dfd, const char * filename, umode_t mode);
long sys_fchownat(int dfd, const char *filename, uid_t user, gid_t group, int flag);
long sys_openat(int dfd, const char *filename, int flags, umode_t mode);
long sys_newfstatat(int dfd, const char *filename, struct stat *statbuf, int flag);
long sys_readlinkat(int dfd, const char *path, char *buf, int bufsiz);
long sys_utimensat(int dfd, const char *filename, struct timespec *utimes, int flags);
long sys_unshare(unsigned long unshare_flags);
long sys_splice(int fd_in, loff_t *off_in, int fd_out, loff_t *off_out, size_t len, unsigned int flags);
long sys_vmsplice(int fd, const struct iovec *iov, unsigned long nr_segs, unsigned int flags);
long sys_tee(int fdin, int fdout, size_t len, unsigned int flags);
long sys_sync_file_range(int fd, loff_t offset, loff_t nbytes, unsigned int flags);
long sys_sync_file_range2(int fd, unsigned int flags, loff_t offset, loff_t nbytes);
long sys_get_robust_list(int pid, struct robust_list_head * *head_ptr, size_t *len_ptr);
long sys_set_robust_list(struct robust_list_head *head, size_t len);
long sys_getcpu(unsigned *cpu, unsigned *node, struct getcpu_cache *cache);
long sys_signalfd(int ufd, sigset_t *user_mask, size_t sizemask);
long sys_signalfd4(int ufd, sigset_t *user_mask, size_t sizemask, int flags);
long sys_timerfd_create(int clockid, int flags);
long sys_timerfd_settime(int ufd, int flags, const struct itimerspec *utmr, struct itimerspec *otmr);
long sys_timerfd_gettime(int ufd, struct itimerspec *otmr);
long sys_eventfd(unsigned int count);
long sys_eventfd2(unsigned int count, int flags);
long sys_memfd_create(const char *uname_ptr, unsigned int flags);
long sys_userfaultfd(int flags);
long sys_fallocate(int fd, int mode, loff_t offset, loff_t len);
long sys_old_readdir(unsigned int, struct old_linux_dirent *, unsigned int);
long sys_pselect6(int, fd_set *, fd_set *, fd_set *, struct timespec *, void *);
long sys_ppoll(struct pollfd *, unsigned int, struct timespec *, const sigset_t *, size_t);
long sys_fanotify_init(unsigned int flags, unsigned int event_f_flags);
long sys_fanotify_mark(int fanotify_fd, unsigned int flags, u64 mask, int fd, const char *pathname);
long sys_syncfs(int fd);
long sys_fork(void);
long sys_vfork(void);
long sys_clone(unsigned long, unsigned long, int *, int *, unsigned long);
long sys_execve(const char *filename, const char *const *argv, const char *const *envp);
long sys_perf_event_open( struct perf_event_attr *attr_uptr, pid_t pid, int cpu, int group_fd, unsigned long flags);
long sys_mmap_pgoff(unsigned long addr, unsigned long len, unsigned long prot, unsigned long flags, unsigned long fd, unsigned long pgoff);
long sys_old_mmap(struct mmap_arg_struct *arg);
long sys_name_to_handle_at(int dfd, const char *name, struct file_handle *handle, int *mnt_id, int flag);
long sys_open_by_handle_at(int mountdirfd, struct file_handle *handle, int flags);
long sys_setns(int fd, int nstype);
long sys_process_vm_readv(pid_t pid, const struct iovec *lvec, unsigned long liovcnt, const struct iovec *rvec, unsigned long riovcnt, unsigned long flags);
long sys_process_vm_writev(pid_t pid, const struct iovec *lvec, unsigned long liovcnt, const struct iovec *rvec, unsigned long riovcnt, unsigned long flags);
long sys_kcmp(pid_t pid1, pid_t pid2, int type, unsigned long idx1, unsigned long idx2);
long sys_finit_module(int fd, const char *uargs, int flags);
long sys_seccomp(unsigned int op, unsigned int flags, const char *uargs);
long sys_getrandom(char *buf, size_t count, unsigned int flags);
long sys_bpf(int cmd, struct bpf_attr *attr, unsigned int size);
long sys_execveat(int dfd, const char *filename, const char *const *argv, const char *const *envp, int flags);
long sys_membarrier(int cmd, int flags);
long sys_copy_file_range(int fd_in, loff_t *off_in, int fd_out, loff_t *off_out, size_t len, unsigned int flags);
long sys_mlock2(unsigned long start, size_t len, int flags);
long sys_pkey_mprotect(unsigned long start, size_t len, unsigned long prot, int pkey);
long sys_pkey_alloc(unsigned long flags, unsigned long init_val);
long sys_pkey_free(int pkey);
long sys_statx(int dfd, const char *path, unsigned flags, unsigned mask, struct statx *buffer);
